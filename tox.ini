[tox]
envlist = py27-ansible{20,21,22,-devel}-{org,enterprise}
skipsdist = True

[testenv]
whitelist_externals =
    make
    bash
    docker

passenv =
    SSH_AUTH_SOCK
    TOXENV

deps =
    ansible20: ansible>=2.0,<2.1
    ansible21: ansible>=2.1,<2.2
    ansible22: ansible>=2.2,<2.3
    ansible-devel: git+https://github.com/ansible/ansible.git@devel
    ansible-lint
    pytest==2.9.2
    testinfra==1.4.2
    git+https://github.com/infOpen/pytest-ansible-docker.git@0.5.1

commands =
    ansible-lint 'tasks/main.yml' -v

[org]
setenv =
    MONGODB_EDITION = 'org'

commands =
    py.test -vv -s --ssh-private-key-path={env:SSH_PRIVATE_KEY_PATH} \
                   --ssh-public-key-path={env:SSH_PUBLIC_KEY_PATH} \
                   --ansible-idempotence-changed=1 \
                   --ansible-groups=org

[enterprise]
setenv =
    MONGODB_EDITION = 'enterprise'

commands =
    py.test -vv -s --ssh-private-key-path={env:SSH_PRIVATE_KEY_PATH} \
                   --ssh-public-key-path={env:SSH_PUBLIC_KEY_PATH} \
                   --ansible-idempotence-changed=1 \
                   --ansible-groups=enterprise

[testenv:py27-ansible20-org]
setenv =
    {[org]setenv}
commands =
    {[org]commands}
[testenv:py27-ansible21-org]
setenv =
    {[org]setenv}
commands =
    {[org]commands}
[testenv:py27-ansible22-org]
setenv =
    {[org]setenv}
commands =
    {[org]commands}
[testenv:py27-ansible-devel-org]
setenv =
    {[org]setenv}
commands =
    {[org]commands}

[testenv:py27-ansible20-enterprise]
setenv =
    {[enterprise]setenv}
commands =
    {[enterprise]commands}
[testenv:py27-ansible21-enterprise]
setenv =
    {[enterprise]setenv}
commands =
    {[enterprise]commands}
[testenv:py27-ansible22-enterprise]
setenv =
    {[enterprise]setenv}
commands =
    {[enterprise]commands}
[testenv:py27-ansible-devel-enterprise]
setenv =
    {[enterprise]setenv}
commands =
    {[enterprise]commands}
