#Â {{ ansible_managed }}

{% set instance_user = item.user | default(mongodb_user) %}
{% set instance_group = item.group | default(mongodb_group) %}
{% set instance_data_dir_path = item.config.storage.dbPath %}
{% set instance_log_dir_path = (item.config.systemLog.path | dirname) %}
{% set instance_run_dir_path = mongodb_base_folders_paths.run %}
{% set instance_pid_file_path = (instance_run_dir_path ~ '/' ~ item.type ~ '_' ~ item.config.net.port ~ '.pid') %}

# Recommended ulimit values for mongod or mongos
# See http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
#
limit fsize unlimited unlimited
limit cpu unlimited unlimited
limit as unlimited unlimited
limit nofile 64000 64000
limit rss unlimited unlimited
limit nproc 64000 64000

kill timeout 300 # wait 300s between SIGTERM and SIGKILL.

pre-start script
  DAEMONUSER={{ instance_user }}
  if [ ! -d {{ instance_data_dir_path }} ]; then
    mkdir -p {{ instance_data_dir_path }} \
      && chown {{ instance_user }}:{{ instance_user }} {{ instance_data_dir_path }}
  fi
  if [ ! -d {{ instance_log_dir_path }} ]; then
    mkdir -p {{ instance_log_dir_path }} \
      && chown {{ instance_user }}:{{ instance_user }} {{ instance_log_dir_path }}
  fi
  if [ ! -d {{ instance_run_dir_path }} ]; then
    mkdir -p {{ instance_run_dir_path }} \
      && chown {{ mongodb_user }}:{{ mongodb_group }} {{ instance_run_dir_path }} \
      && chmod 770 {{ instance_run_dir_path }}
  fi
  touch {{ instance_pid_file_path }}
  chown $DAEMONUSER {{ instance_pid_file_path }}
end script

start on runlevel [2345]
stop on runlevel [06]

script
  ENABLE_{{ item.type | upper }}="{{ (item.enabled | default(True)) | ternary('yes', 'no') }}"
  CONF={{ mongodb_base_folders_paths.config }}/{{ item.type }}_{{ item.config.net.port }}.conf
  DAEMON=/usr/bin/{{ item.type }}
  DAEMONUSER={{ instance_user }}
  DAEMONGROUP={{ instance_group }}

  if [ -f /etc/default/{{ item.type }} ]; then . /etc/default/{{ item.type }}; fi

  # Handle NUMA access to CPUs (SERVER-3574)
  # This verifies the existence of numactl as well as testing that the command works
  NUMACTL_ARGS="--interleave=all"
  if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
  then
    NUMACTL="$(which numactl) -- $NUMACTL_ARGS"
    DAEMON_OPTS=${DAEMON_OPTS:-"--config $CONF"}
  else
    NUMACTL=""
    DAEMON_OPTS="-- "${DAEMON_OPTS:-"--config $CONF"}
  fi

  if [ "x$ENABLE_{{ item.type | upper }}" = "xyes" ]
  then
    exec start-stop-daemon --start \
        --chuid $DAEMONUSER:$DAEMONGROUP \
        --pidfile {{ instance_pid_file_path }} \
        --make-pidfile \
        --exec $NUMACTL $DAEMON $DAEMON_OPTS
  fi
end script
